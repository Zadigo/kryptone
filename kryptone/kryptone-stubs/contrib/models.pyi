import dataclasses
import pathlib
import re
from functools import cached_property, lru_cache
from typing import Literal, NoReturn, Union
from urllib.parse import ParseResult
from kryptone.db.models import BaseModel

@dataclasses.dataclass
class Product(BaseModel):
    name: str
    description: str
    price: int
    url: str
    collection_id: str = ...
    number_of_colors: int = Literal[1]
    id_or_reference: str = ...
    id: int = ...
    images: list = ...
    color: str = ...
    composition: str = ...
    color: str = ...
    def __hash__(self) -> int: ...
    @cached_property
    def get_images_url_objects(self) -> list[ParseResult]: ...
    @cached_property
    def number_of_images(self) -> int: ...
    def build_directory_from_url(self, exclude=[]) -> pathlib.Path: ...
    def set_collection_id(self, regex) -> NoReturn: ...
