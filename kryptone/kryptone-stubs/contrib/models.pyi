import dataclasses
from functools import cached_property
from typing import Literal
from urllib.parse import ParseResult

from kryptone.db.models import BaseModel


@dataclasses.dataclass
class Products(BaseModel):
    name: str
    price: str
    url: str
    image: str = ...
    colors: list = ...
    other_information: str = ...


@dataclasses.dataclass
class Product(BaseModel):
    name: str
    description: str
    price: int
    url: str
    material: str = ...
    old_price: int = ...
    breadcrumb: str = ...
    collection_id: str = ...
    number_of_colors: int = Literal[1]
    id_or_reference: str = ...
    images: list = ...
    color: str = ...
    date: str = ...
    sizes: list = ...
    out_of_stock: bool = ...

    def __hash__(self) -> int: ...
    @cached_property
    def get_images_url_objects(self) -> list[ParseResult]: ...
    @cached_property
    def number_of_images(self) -> int: ...
    def set_collection_id(self, regex: str) -> None: ...
    def complex_name(self) -> str: ...


@dataclasses.dataclass
class GoogleBusiness(BaseModel):
    name: str = ...
    url: str = ...
    feed_url: str = ...
    address: str = ...
    rating: str = ...
    latitude: int = ...
    longitude: int = ...
    number_of_reviews: int = ...
    additional_information: list = ...
    comments: list = ...


@dataclasses.dataclass
class GoogleSearch:
    title: str
    url: str
